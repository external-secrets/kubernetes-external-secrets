# Secret Manager secret type: username_password, arbitrary, kev, or iam_credentials
apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: ibmcloud-secrets-manager
spec:
  backendType: ibmcloudSecretsManager
  # optional: true to key secrets by name instead of by ID
  keyByName: true
  data:
    # get username and password as json of secret type: username_password
    - key: my-creds
      name: username_password
      secretType: username_password
    # get just the password of secret type: username_password
    - key: my-creds
      name: username
      property: password
      secretType: username_password
    # get just the value of a specific key of secret type: keyvalue
    - key: my-creds
      name: key
      property: payload.key
      secretType: kv
    # get value of secret type: arbitrary
    - key: my-creds
      name: test
      property: payload
      secretType: arbitrary
---
# Secret Manager secret type: imported_cert
apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: ibmcloud-secrets-manager
spec:
  backendType: ibmcloudSecretsManager
  template:
    type: kubernetes.io/tls
  # optional: true to key secrets by name instead of by ID
  keyByName: true
  data:
    # get certificate secret type: imported_cert
    - key: my-creds
      name: tls.crt
      property: certificate
      secretType: imported_cert
    # get private key from secret type: imported_cert
    - key: my-creds
      name: tls.key
      property: private_key
      secretType: imported_cert
